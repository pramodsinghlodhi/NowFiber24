
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an Admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
    
    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Helper function to check if the user is a technician
    function isTechnician() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Technician';
    }

    // Users collection: Admins can manage all users. Users can read their own data.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
      allow delete: if isAdmin(); // Admins can delete users
    }

    // Technicians: Authenticated users can read. Admins can write.
    match /technicians/{techId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Alerts: Authenticated users can read. Admins can write.
    match /alerts/{alertId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
    // Infrastructure: Authenticated users can read. Admins can write.
    match /infrastructure/{deviceId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
    // Connections: Authenticated users can read. Admins can write.
    match /connections/{connectionId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
    // Tasks: Admins can do anything. Technicians can read all tasks, but can only update their own.
    match /tasks/{taskId} {
      allow read: if request.auth != null;
      allow write: if isAdmin() || (isTechnician() && resource.data.tech_id == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id);
    }
    
    // Materials: Authenticated users can read. Admins can write.
    match /materials/{materialId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
    // Assignments: Admins can do anything. Technicians can create new requests (assignments) for themselves.
    match /assignments/{assignmentId} {
        allow read: if request.auth != null;
        allow create: if isTechnician() && request.resource.data.technicianId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id;
        allow update, delete: if isAdmin();
    }

    // Referrals: Admins can do anything. Technicians can create new referrals for themselves.
    match /referrals/{referralId} {
        allow read: if request.auth != null;
        allow create: if isTechnician() && request.resource.data.tech_id == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id;
        allow update, delete: if isAdmin();
    }
    
    // Plans: Authenticated users can read. Admins can write.
    match /plans/{planId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }

  }
}
