rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the requesting user is an Admin
    function isUserAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
    
    // Helper function to check if the user is authenticated
    function isAuth() {
        return request.auth != null;
    }

    // Users can only read their own profile. Admins can read any profile.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isUserAdmin();
      allow write: if isUserAdmin(); // Only Admins can create/update user roles
    }

    // Technicians can only be managed by Admins.
    match /technicians/{techId} {
      allow read, list: if isUserAdmin();
      allow write: if isUserAdmin();
    }

    // Tasks: Admins can manage all. Technicians can read their own.
    match /tasks/{taskId} {
      allow read, list: if isUserAdmin() || (isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id == resource.data.tech_id);
      allow write: if isUserAdmin();
    }
    
    // Alerts: Admins can manage all. Authenticated users can read.
    match /alerts/{alertId} {
      allow read, list: if isAuth();
      allow write: if isUserAdmin();
    }

    // Materials: Admins can manage all. Authenticated users can read.
    match /materials/{materialId} {
        allow read, list: if isAuth();
        allow write: if isUserAdmin();
    }

    // Assignments: Admins can manage all. Technicians can read/list their own.
    match /assignments/{assignmentId} {
        allow read, list: if isUserAdmin() || (isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id == resource.data.technicianId);
        allow write: if isUserAdmin();
    }

    // Referrals: Admins can manage all. Technicians can read/list their own.
    match /referrals/{referralId} {
        allow read, list: if isUserAdmin() || (isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id == resource.data.tech_id);
        allow write: if isUserAdmin();
    }

    // Proof of Work: Admins can manage all.
    match /proofOfWork/{proofId} {
      allow read, list, write: if isUserAdmin();
      allow create: if isAuth();
    }
    
    // Infrastructure: Admins can manage all. Authenticated users can read.
    match /infrastructure/{deviceId} {
        allow read, list: if isAuth();
        allow write: if isUserAdmin();
    }
    
    // Connections: Admins can manage all. Authenticated users can read.
    match /connections/{connectionId} {
        allow read, list: if isAuth();
        allow write: if isUserAdmin();
    }

    // Settings can only be read/written by Admins
    match /settings/live {
      allow read, write: if isUserAdmin();
    }
    
    // Contact submissions can only be written publicly, read/managed by Admins
    match /contacts/{contactId} {
      allow create: if true;
      allow read, list, update, delete: if isUserAdmin();
    }

    // Notifications can only be accessed by the user they belong to.
    match /users/{userId}/notifications/{notificationId} {
        allow read, write, list, delete: if request.auth.uid == userId;
    }
  }
}
