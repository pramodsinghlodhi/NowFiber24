
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read/write any user document
      allow read, write: if isAdmin();
      // Any authenticated user can read their OWN user document
      allow get: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for the 'technicians' collection
    match /technicians/{techId} {
      // Admins can read/write any technician document
      allow read, write: if isAdmin();
      // An authenticated user can update their own technician document
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id == techId;
    }

    // Rules for the 'tasks' collection
    match /tasks/{taskId} {
      // Admins can read/write any task document
      allow read, write: if isAdmin();
      // Any authenticated user can read any task.
      allow list: if request.auth != null;
    }
    
    // Generic read-only access for most other collections
    match /{document=**} {
      allow read: if request.auth != null;
    }
  }
}
