rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions to check user roles based on their profile in the 'users' collection.
    // This is more secure than relying on custom claims for simple role checks.
    function isSignedIn() {
      return request.auth != null;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function isAdmin() {
      return isSignedIn() && getUserData().role == 'Admin';
    }

    function isTechnician() {
        return isSignedIn() && getUserData().role == 'Technician';
    }

    // Users can read their own profile to establish their role.
    // Admins can read any user profile.
    match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || isAdmin());
      allow write: if isAdmin(); // Only admins can create or modify user profiles.
    }

    // Technicians need to be able to update their own status, location, etc.
    // Admins can manage all technician documents.
    match /technicians/{techId} {
        allow read: if isSignedIn();
        allow update: if (isSignedIn() && request.auth.uid == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.uid && request.resource.data.id == techId) || isAdmin();
        allow write: if isAdmin();
    }
    
    // Notifications are private to each user.
    match /users/{userId}/notifications/{notificationId} {
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }

    // Broad read access for core data needed by both admins and technicians
    // for dashboard, map, lists, etc. Write access is restricted.
    match /infrastructure/{deviceId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }

    match /tasks/{taskId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
        allow update(diff): if isTechnician() && diff.size() == 1 && ('status' in diff.affectedKeys() || 'completionTimestamp' in diff.affectedKeys());
    }

    match /alerts/{alertId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }

    match /materials/{materialId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    
    match /assignments/{assignmentId} {
        allow read: if isSignedIn();
        // Technicians can create requests, admins can manage them.
        allow create: if isTechnician();
        allow write: if isAdmin();
    }

    match /connections/{connectionId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    
    match /referrals/{referralId} {
        allow read: if isSignedIn();
        // Technicians can create referrals for their own tech_id.
        allow create: if isTechnician() && request.resource.data.tech_id == getUserData().id;
        // Admins can update the status of any referral.
        allow update: if isAdmin();
        allow delete: if isAdmin();
    }
    
    match /proofOfWork/{proofId} {
      allow read: if isAdmin();
      // A technician can only create a proof of work for themselves.
      allow create: if isTechnician() && request.resource.data.technicianId == getUserData().id;
      allow delete: if isAdmin();
    }

    match /settings/live {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    
    match /contacts/{contactId} {
        // Anyone can create a contact submission (from the public landing page).
        allow create; 
        // Only admins can read or manage them.
        allow read, write, delete: if isAdmin();
    }
    
     match /plans/{planId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
  }
}
