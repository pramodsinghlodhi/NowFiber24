rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    function isTechnician() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Technician';
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isBlocked() {
       return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isBlocked == true;
    }

    // Users can read their own profile. Admins can read/write all profiles.
    match /users/{userId} {
      allow read: if request.auth != null && !isBlocked() && (isOwner(userId) || isAdmin());
      allow write: if isAdmin();
    }

    // Admins have full access. Technicians can only read.
    match /technicians/{techId} {
      allow read: if request.auth != null && !isBlocked();
      allow write: if isAdmin();
    }

    // Admins have full access. Technicians can only read.
    match /infrastructure/{deviceId} {
        allow read: if request.auth != null && !isBlocked();
        allow write: if isAdmin();
    }
    
    // Admins have full access. Technicians can only read.
     match /connections/{connectionId} {
        allow read: if request.auth != null && !isBlocked();
        allow write: if isAdmin();
    }

    // Admins have full access. Technicians can only read.
    match /alerts/{alertId} {
        allow read: if request.auth != null && !isBlocked();
        allow write: if isAdmin();
    }
    
    // Admins have full access.
    // Technicians can read all tasks, but can only update their own assigned tasks.
    match /tasks/{taskId} {
        allow read: if request.auth != null && !isBlocked();
        allow create: if isAdmin();
        allow update: if request.auth != null && !isBlocked() && (isAdmin() || request.resource.data.tech_id == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id);
        allow delete: if isAdmin();
    }

    // Admins have full access. 
    // Technicians can create their own referrals, and can only read their own referrals.
    match /referrals/{referralId} {
        allow read: if request.auth != null && !isBlocked() && (isAdmin() || resource.data.tech_id == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id);
        allow create: if isTechnician() && request.resource.data.tech_id == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id;
        allow update, delete: if isAdmin();
    }

    // Admins have full access. Technicians can read all materials.
    match /materials/{materialId} {
        allow read: if request.auth != null && !isBlocked();
        allow write: if isAdmin();
    }

    // Admins have full access. 
    // Technicians can create their own material requests, and can only read their own assignments.
    match /assignments/{assignmentId} {
        allow read: if request.auth != null && !isBlocked() && (isAdmin() || resource.data.technicianId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id);
        allow create: if isTechnician() && request.resource.data.technicianId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id;
        allow update, delete: if isAdmin();
    }

    // Admins have full access. Technicians can only read.
    match /plans/{planId} {
      allow read: if request.auth != null && !isBlocked();
      allow write: if isAdmin();
    }

  }
}
