
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      // Custom claims are set on the user's token via the Admin SDK
      return request.auth.token.role == 'Admin';
    }

    // A user can only access their own user profile document
    match /users/{userId} {
      allow read: if isAuth() && request.auth.uid == userId;
      allow create, write: if isAdmin();
      
      // A user can only access their own notifications
      match /notifications/{notificationId} {
        allow read, write, list, delete: if request.auth.uid == userId;
      }
    }

    // Admins can manage all technicians.
    // Technicians can read the list to see who is on a task, but cannot write.
    match /technicians/{techId} {
      allow list, read: if isAuth();
      allow write: if isAdmin();
    }
    
    // Admins can manage all infrastructure.
    // Technicians can read the list for map display and task context.
    match /infrastructure/{deviceId} {
      allow list, read: if isAuth();
      allow write: if isAdmin();
    }
    
    // Admins can manage all connections.
    // Technicians can read the list for the map display.
    match /connections/{connectionId} {
      allow list, read: if isAuth();
      allow write: if isAdmin();
    }

    // Admins can see all tasks.
    // A technician can only query for tasks assigned to them.
    match /tasks/{taskId} {
      allow read, write: if isAuth(); // Allows updating their own task status
      allow list: if isAdmin() || request.query.where[0][0] == 'tech_id' && request.query.where[0][2] == request.auth.uid;
    }
    
    // Admins can see all alerts.
    // Technicians can see all alerts to be aware of network status.
    match /alerts/{alertId} {
      allow list, read: if isAuth();
      allow write: if isAdmin();
    }

    // Admins can manage all material assignments.
    // Technicians can only query for their own assignments.
    match /assignments/{assignmentId} {
      allow read, write: if isAuth();
      allow list: if isAdmin() || request.query.where[0][0] == 'technicianId' && request.query.where[0][2] == request.auth.uid;
      allow create: if isAuth(); // Technicians need to create requests
    }

    // Admins can see all referrals.
    // A technician can only query for referrals submitted by them.
    match /referrals/{referralId} {
      allow read, write: if isAuth();
      allow list: if isAdmin() || request.query.where[0][0] == 'tech_id' && request.query.where[0][2] == request.auth.uid;
      allow create: if isAuth(); // Technicians need to create referrals
    }
    
    // Admins can manage all materials.
    // Technicians can read the list to make requests.
    match /materials/{materialId} {
      allow list, read: if isAuth();
      allow write: if isAdmin();
    }
    
    // Only Admins can view/manage proof of work submissions
    match /proofOfWork/{proofId} {
      allow list, read, write, delete: if isAdmin();
      allow create: if isAuth(); // Techs create them
    }
    
    // Only Admins can manage settings
    match /settings/live {
      allow read, write: if isAdmin();
    }

    // Admins can manage contact submissions.
    // Anyone can create one (from the public landing page).
    match /contacts/{contactId} {
      allow read, write, list, delete: if isAdmin();
      allow create: if true;
    }
    
    // Only Admins can read customer plans
    match /plans/{planId} {
      allow list, read: if isAdmin();
    }
  }
}
