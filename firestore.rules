
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an Admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
    
    // Helper function to check if a user is a Technician
    function isTechnician() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Technician';
    }

    // Admins have full access. Technicians can read their own user document.
    match /users/{userId} {
      allow read, write: if isAdmin();
      allow read: if isTechnician() && request.auth.uid == userId;
    }

    // Only Admins can manage the global settings document.
    match /settings/live {
      allow read, write: if isAdmin();
    }
    
    // Notifications are private to each user.
    match /users/{userId}/notifications/{notificationId} {
        allow read, write: if request.auth.uid == userId;
    }
    
    // Technicians collection can be read by all authenticated users, but only managed by Admins.
    match /technicians/{techId} {
      allow read: if request.auth.token != null;
      allow write: if isAdmin();
      // A technician can update their own location and status
      allow update: if isTechnician() && request.auth.token.id == techId;
    }

    // Technicians can create referrals. Admins can manage all referrals.
    match /referrals/{referralId} {
        allow read: if request.auth.token != null;
        allow create: if isTechnician();
        allow update: if isAdmin();
    }
    
    // Technicians can submit proof of work. Admins can manage all submissions.
    match /proofOfWork/{proofId} {
        allow read, delete: if isAdmin();
        allow create: if isTechnician();
    }
    
    // All other collections are readable by all authenticated users, but only writable by Admins.
    // This allows components like maps and dashboards to load data for all users.
    match /{collection}/{docId} {
      allow read: if request.auth.token != null;
      allow write: if isAdmin();
    }
  }
}
