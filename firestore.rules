
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isAuth() {
      return request.auth != null;
    }

    function isUserAdmin() {
      // Securely check the user's role from their document in the 'users' collection.
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Rules for Collections

    // Users can only read their own profile. Only Admins can create/update/delete users.
    match /users/{userId} {
      allow read: if isAuth() && request.auth.uid == userId;
      allow write: if isUserAdmin();
    }
    
    // Users can only access their own notifications.
    match /users/{userId}/notifications/{notificationId} {
        allow read, write, delete: if isAuth() && request.auth.uid == userId;
    }

    // Admins have full access. Technicians can query and read all shared infrastructure data.
    match /infrastructure/{docId} {
      allow read, list: if isAuth(); // All authenticated users can read/query
      allow write: if isUserAdmin();
    }
    
    match /connections/{docId} {
        allow read, list: if isAuth(); // All authenticated users can read/query
        allow write: if isUserAdmin();
    }

    // Admins have full access. Technicians can query and read all alerts.
    match /alerts/{docId} {
      allow read, list: if isAuth(); // All authenticated users can read/query
      allow write: if isUserAdmin();
    }
    
    // Admins can manage all technicians. Technicians can read all technician data for map/assignments.
    match /technicians/{docId} {
        allow read, list: if isAuth();
        allow write: if isUserAdmin() || (isAuth() && request.resource.data.id == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id);
    }
    
    // Admins can manage all tasks. Technicians can only query their own tasks.
    match /tasks/{taskId} {
      allow read: if isAuth();
      allow write, create: if isUserAdmin() || (isAuth() && request.resource.data.tech_id == request.auth.uid);
      allow list: if isUserAdmin() || (isAuth() && request.query.where[0][2] == request.auth.uid);
    }

    // Admins can manage all referrals. Technicians can read their own.
    match /referrals/{referralId} {
      allow read: if isAuth();
      allow write: if isUserAdmin() || (isAuth() && request.resource.data.tech_id == request.auth.uid);
      allow list: if isUserAdmin() || (isAuth() && request.query.where[0][2] == request.auth.uid);
    }

    // Admins can manage all material assignments. Technicians can create their own requests.
    match /assignments/{assignmentId} {
      allow read: if isAuth();
      allow create: if isAuth(); // Technicians can create requests.
      allow update, delete: if isUserAdmin();
      allow list: if isUserAdmin() || (isAuth() && request.query.where[0][2] == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id);
    }

    // Admins can manage all materials. Technicians can read them.
    match /materials/{materialId} {
        allow read, list: if isAuth();
        allow write: if isUserAdmin();
    }

    // Admins manage settings
    match /settings/{settingId} {
        allow read: if isAuth();
        allow write: if isUserAdmin();
    }
    
    // Admins can read contact submissions
    match /contacts/{contactId} {
        allow read, list, write: if isUserAdmin();
    }
    
    // Admins can manage proof of work. Technicians can create it.
    match /proofOfWork/{proofId} {
        allow read, list, delete: if isUserAdmin();
        allow create: if isAuth();
    }

    match /plans/{planId} {
      allow read: if isUserAdmin();
    }
    
  }
}
