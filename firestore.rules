
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuth() && request.auth.token.role == 'Admin';
    }

    function isTechnician() {
        return isAuth() && request.auth.token.role == 'Technician';
    }
    
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow list, create, delete: if isAdmin();
    }

    match /technicians/{techId} {
        allow read, list: if isAuth();
        allow create, update, delete: if isAdmin();
    }

    match /tasks/{taskId} {
        allow read: if isAuth();
        allow create, update, delete: if isAdmin();
        // Allow query if it's from an admin OR if the query is filtering by the user's own UID
        allow list: if isAdmin() || (isTechnician() && request.auth.uid == request.query.where.tech_id);
    }
    
    match /alerts/{alertId} {
        allow read, list: if isAuth();
        allow create, update, delete: if isAdmin();
    }

    match /infrastructure/{deviceId} {
        allow read, list: if isAuth();
        allow create, update, delete: if isAdmin();
    }
    
    match /connections/{connectionId} {
        allow read, list: if isAuth();
        allow create, update, delete: if isAdmin();
    }

    match /materials/{materialId} {
        allow read, list: if isAuth();
        allow create, update, delete: if isAdmin();
    }

    match /assignments/{assignmentId} {
        allow read, create: if isAuth();
        allow list: if isAdmin() || (isTechnician() && request.auth.uid == request.query.where.tech_id);
        allow update, delete: if isAdmin();
    }

    match /referrals/{referralId} {
        allow read, create: if isAuth();
        allow list: if isAdmin() || (isTechnician() && request.auth.uid == request.query.where.tech_id);
        allow update, delete: if isAdmin();
    }

    match /proofOfWork/{proofId} {
        allow read, create: if isAuth();
        allow list, delete: if isAdmin();
    }

    match /settings/live {
        allow read: if isAuth();
        allow write: if isAdmin();
    }

    match /contacts/{contactId} {
        allow create: if true; // Allow anyone to submit the contact form
        allow read, list, update, delete: if isAdmin();
    }

    // Notifications subcollection for each user
    match /users/{userId}/notifications/{notificationId} {
      allow read, list, update, delete: if request.auth.uid == userId;
      allow create: if isAuth(); // Can be created by server actions
    }
  }
}
