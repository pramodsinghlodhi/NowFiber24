rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to simplify rule logic
    function isAuth() {
      return request.auth != null;
    }

    // Check if the authenticated user has the 'Admin' role in their user document
    function isAdmin() {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Check if the authenticated user has the 'Technician' role
    function isTechnician() {
        return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Technician';
    }
    
    // Check if the authenticated user is the owner of the document (based on UID)
    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    // =================================
    //         Collection Rules
    // =================================

    // Users can read their own data to get their role. Admins can read/write all.
    match /users/{userId} {
      allow read: if isAuth() && (isOwner(userId) || isAdmin());
      allow write: if isAdmin();
    }
    
    // Technicians can be read by any authenticated user, but only written by Admins.
    match /technicians/{techId} {
      allow read: if isAuth();
      allow write: if isAdmin();
    }

    // Tasks can be read by any authenticated user.
    // Creation/deletion by Admins only.
    // Technicians can only update tasks assigned to them.
    match /tasks/{taskId} {
        allow read: if isAuth();
        allow create, delete: if isAdmin();
        allow update: if isAdmin() || (isTechnician() && request.resource.data.tech_id == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id);
    }
    
    // Alerts can be read by any authenticated user.
    // Written only by Admins (or a future server process).
    match /alerts/{alertId} {
        allow read: if isAuth();
        allow write: if isAdmin();
    }
    
    // Infrastructure can be read by any authenticated user.
    // Written only by Admins.
    match /infrastructure/{infraId} {
        allow read: if isAuth();
        allow write: if isAdmin();
    }

    // Connections can be read by any authenticated user.
    // Written only by Admins.
    match /connections/{connId} {
        allow read: if isAuth();
        allow write: if isAdmin();
    }
    
    // Materials can be read by any authenticated user.
    // Written only by Admins.
    match /materials/{materialId} {
        allow read: if isAuth();
        allow write: if isAdmin();
    }

    // Assignments can be read by Admins. Technicians can read their own.
    // Technicians can create new requests for themselves.
    // Admins can update/delete any assignment.
    match /assignments/{assignmentId} {
        allow read: if isAdmin() || (isTechnician() && resource.data.technicianId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id);
        allow create: if isTechnician() && request.resource.data.technicianId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id;
        allow update, delete: if isAdmin();
    }
    
    // Referrals can be read by Admins. Technicians can read their own.
    // Technicians can create new referrals for themselves.
    // Admins can update/delete any referral.
    match /referrals/{referralId} {
        allow read: if isAdmin() || (isTechnician() && resource.data.tech_id == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id);
        allow create: if isTechnician() && request.resource.data.tech_id == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id;
        allow update, delete: if isAdmin();
    }

    // Plans can be read by Admins only.
    match /plans/{planId} {
        allow read, write: if isAdmin();
    }
  }
}
