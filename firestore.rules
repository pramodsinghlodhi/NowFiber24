rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user has the 'Admin' role.
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
    
    // Helper function to check if a user is a 'Technician'.
    function isTechnician() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Technician';
    }
    
    // Helper function to get the custom user ID (e.g., 'tech-001') from their UID.
    function getUserId() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id;
    }

    // Users can only read their own data. Admins can read anyone's data for management purposes.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      // Only admins can block/unblock users. Users cannot edit their own roles.
      allow update: if isAdmin();
      // Prevent users from being created/deleted directly from the client. This should be handled by a secure backend or Firebase Authentication triggers.
      allow create, delete: if false;
    }
    
    match /technicians/{techId} {
      // Admins can manage all technicians. Technicians can view their own profile.
      allow read: if isAdmin() || (isTechnician() && getUserId() == techId);
      // Only Admins can create, update, or delete technician profiles.
      allow write: if isAdmin();
    }
    
    match /tasks/{taskId} {
      // Admins can read all tasks. Technicians can read tasks assigned to them.
      allow read: if isAdmin() || (isTechnician() && resource.data.tech_id == getUserId());
      // Admins can create and update (reassign) tasks. Technicians cannot create tasks directly.
      allow create, update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    match /alerts/{alertId} {
      // All authenticated users can read alerts. This is needed for map displays and lists.
      allow read: if request.auth != null;
      // Alerts are created by a trusted server/AI process, not directly by clients.
      allow write: if isAdmin(); 
    }
    
    match /infrastructure/{deviceId} {
      // All authenticated users can read infrastructure data for map display.
      allow read: if request.auth != null;
      // Only Admins can manage the network infrastructure.
      allow write: if isAdmin();
    }
    
    match /connections/{connId} {
       // All authenticated users can read connection data for map display.
       allow read: if request.auth != null;
       allow write: if isAdmin();
    }

    match /materials/{materialId} {
        // Admins can manage materials. Technicians can view the list of available materials.
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
    match /assignments/{assignmentId} {
        // Admins can read all assignments. Technicians can read their own.
        allow read: if isAdmin() || (isTechnician() && resource.data.technicianId == getUserId());
        // Admins can manage all assignments. Technicians can create new 'Requested' assignments.
        allow create: if isTechnician();
        allow update, delete: if isAdmin();
    }
    
    match /referrals/{referralId} {
        // Admins can read all referrals. Technicians can read their own.
        allow read: if isAdmin() || (isTechnician() && resource.data.tech_id == getUserId());
        // Technicians can create referrals. Admins can update their status.
        allow create: if isTechnician();
        allow update: if isAdmin();
        allow delete: if isAdmin();
    }
    
    match /plans/{planId} {
       // Allow authenticated users to read plan data. This is needed for map popups.
       allow read: if request.auth != null;
       allow write: if isAdmin();
    }
  }
}
