
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      // Check for the admin custom claim on the user's token.
      return request.auth.token.role == 'Admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Users can only read their own profile. Admins can read any profile.
      allow read: if isAuth() && (request.auth.uid == userId || isAdmin());
      // Only Admins can create, update, or delete user profiles.
      allow write: if isAdmin();
      // Only Admins can list all users.
      allow list: if isAdmin();
    }

    // Rules for notifications subcollection
    match /users/{userId}/notifications/{notificationId} {
        // Users can only access their own notifications
        allow read, list, write, delete: if isAuth() && request.auth.uid == userId;
    }

    // Rules for shared data collections that all authenticated users can read
    match /{collection}/{docId} where collection in ['infrastructure', 'materials', 'connections', 'alerts'] {
      allow read, list: if isAuth();
      allow write: if isAdmin(); // Only admins can modify these
    }
    
    match /technicians/{techId} {
        allow read, list: if isAuth();
        allow write: if isAdmin();
    }

    // Rules for collections with user-specific data
    match /tasks/{taskId} {
      allow read: if isAuth();
      // Admins can list all tasks. Technicians can only query tasks assigned to them.
      allow list: if isAdmin() || (request.query.where['tech_id'] == request.auth.uid);
      // Admins can write to any task. Techs can only update their own.
      allow write: if isAdmin() || (isAuth() && request.resource.data.tech_id == request.auth.uid);
    }
    
    match /referrals/{referralId} {
        allow read: if isAuth();
        // Admins can list all. Techs can query their own. Techs can create new ones.
        allow list: if isAdmin() || (request.query.where['tech_id'] == request.auth.uid);
        allow create: if isAuth(); // Any authenticated user can create a referral
        allow write: if isAdmin();
    }
    
    match /assignments/{assignmentId} {
        allow read: if isAuth();
        // Admins can list all. Techs can query their own.
        allow list: if isAdmin() || (request.query.where['technicianId'] == request.auth.token.userId); // Check against custom ID claim
        allow create: if isAuth();
        allow write: if isAdmin();
    }
    
    // Admins can read/write all other collections
    match /{document=**} {
      allow read, write: if isAdmin();
    }
  }
}
