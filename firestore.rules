rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    function getUserRole() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    
    function isAdmin() {
        return isAuth() && getUserRole() == 'Admin';
    }

    function isTechnician() {
        return isAuth() && getUserRole() == 'Technician';
    }

    // --- Collection Rules ---

    // Users can read their own profile. Admins can read/write any profile.
    // Technicians can read other user profiles for names/roles but cannot write.
    match /users/{userId} {
      allow read: if isAuth(); // Admins and Technicians need to read user data for names etc.
      allow write: if isAdmin();
      allow create: if isAdmin();
      allow update: if isAdmin() || isOwner(userId);
    }
    
    // Technicians need to read all other technicians for context.
    // Admins can manage the technician list.
    match /technicians/{techId} {
        allow read: if isAuth();
        allow write: if isAdmin();
    }
    
    // Admins can manage everything.
    // Technicians can only read infrastructure, connections, alerts, and materials.
    match /{collection}/{docId} 
        where collection in ['infrastructure', 'connections', 'alerts', 'materials', 'plans'] {
      allow read: if isAuth();
      allow write: if isAdmin();
    }
    
    // Tasks can be read by any authenticated user.
    // Admins can create/write any task.
    // Technicians can only update tasks assigned to them.
    match /tasks/{taskId} {
        allow read: if isAuth();
        allow create: if isAdmin();
        // Allow update if admin OR if technician is the one assigned to the task.
        allow update: if isAdmin() || (isTechnician() && resource.data.tech_id == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.id);
        allow delete: if isAdmin();
    }

    // Admins manage assignments.
    // Technicians can create new "Requested" assignments.
    match /assignments/{assignmentId} {
        allow read: if isAuth();
        allow create: if isTechnician(); // Techs can request materials
        allow write: if isAdmin(); // Admins approve/manage them
    }

    // Admins can manage all referrals.
    // Technicians can create new referrals.
    match /referrals/{referralId} {
        allow read: if isAuth();
        allow create: if isTechnician();
        allow write: if isAdmin();
    }
  }
}
