rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Allow public write access to the 'contacts' collection for the landing page form
    match /contacts/{contactId} {
      allow create: if request.resource.data.name is string &&
                       request.resource.data.email is string &&
                       request.resource.data.message is string &&
                       request.resource.data.status == 'Pending' &&
                       request.resource.data.timestamp == request.time;
      allow read, update, delete: if request.auth.token.isAdmin == true;
    }

    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || request.auth.token.isAdmin == true;
      allow create, delete: if request.auth.token.isAdmin == true;
    }

    match /technicians/{techId} {
      allow read, update: if request.auth != null; // Any authenticated user can read/update
      allow create, delete: if request.auth.token.isAdmin == true;
    }

    match /tasks/{taskId} {
      allow read, update: if request.auth != null;
      allow create, delete: if request.auth.token.isAdmin == true;
    }

    match /alerts/{alertId} {
      allow read, update: if request.auth != null;
      allow create, delete: if request.auth.token.isAdmin == true;
    }
    
    match /infrastructure/{deviceId} {
       allow read, update: if request.auth != null;
       allow create, delete: if request.auth.token.isAdmin == true;
    }
    
    match /connections/{connectionId} {
       allow read, update: if request.auth != null;
       allow create, delete: if request.auth.token.isAdmin == true;
    }

    match /materials/{materialId} {
       allow read: if request.auth != null;
       allow create, update, delete: if request.auth.token.isAdmin == true;
    }

    match /assignments/{assignmentId} {
      allow read, create, update, delete: if request.auth.token.isAdmin == true;
      allow create: if request.auth != null && request.resource.data.technicianId == request.auth.token.userId;
      allow read: if request.auth != null && request.resource.data.technicianId == request.auth.token.userId;
    }
    
    match /referrals/{referralId} {
       allow read, update: if request.auth.token.isAdmin == true;
       allow create: if request.auth != null && request.resource.data.tech_id == request.auth.token.userId;
       allow read: if request.auth != null && request.resource.data.tech_id == request.auth.token.userId;
    }
    
    match /proofOfWork/{proofId} {
      allow read, delete: if request.auth.token.isAdmin == true;
      allow create: if request.auth != null && request.resource.data.technicianId == request.auth.token.userId;
    }

    match /settings/live {
      allow read: if request.auth != null; // Authenticated users can read settings
      allow write: if request.auth.token.isAdmin == true; // Only admins can write
    }
    
    match /plans/{planId} {
        allow read: if request.auth != null;
        allow create, update, delete: if request.auth.token.isAdmin == true;
    }

    // Notifications are private per user
    match /users/{userId}/notifications/{notificationId} {
        allow read, write: if request.auth.uid == userId;
    }
  }
}
