
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    
    function isAuthOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuth() && request.auth.token.isAdmin == true;
    }

    // Users: Can only read/write their own user document. No one can list all users.
    match /users/{userId} {
      allow read, update, delete: if isAuthOwner(userId) || isAdmin();
      allow create: if isAuth(); // Allow creation for new sign-ups
      allow list: if isAdmin();
    }
    
    // Notifications: Users can only manage their own notifications.
    match /users/{userId}/notifications/{notificationId} {
        allow read, write, delete, list: if isAuthOwner(userId);
    }
    
    // Technicians: Readable by any authenticated user (for maps, task assignment), writable only by admin.
    match /technicians/{techId} {
      allow get: if isAuth();
      allow list: if isAuth();
      allow write: if isAdmin();
    }
    
    // Tasks: Readable by any authenticated user (for maps, task lists), writable only by admin.
    match /tasks/{taskId} {
      allow get: if isAuth();
      allow list: if isAuth();
      allow write: if isAdmin();
    }
    
    // Alerts: Readable by any authenticated user, writable only by admin (or server process).
    match /alerts/{alertId} {
      allow get: if isAuth();
      allow list: if isAuth();
      allow write: if isAdmin();
    }

    // Infrastructure: Readable by any authenticated user, writable by admin.
    match /infrastructure/{deviceId} {
      allow get: if isAuth();
      allow list: if isAuth();
      allow write: if isAdmin();
    }
    
    // Connections: Readable by any authenticated user, writable by admin.
    match /connections/{connectionId} {
      allow get: if isAuth();
      allow list: if isAuth();
      allow write: if isAdmin();
    }

    // Materials: Readable by any authenticated user, writable by admin.
    match /materials/{materialId} {
      allow get: if isAuth();
      allow list: if isAuth();
      allow write: if isAdmin();
    }
    
    // Assignments: Readable by auth'd users, writable by admin.
    match /assignments/{assignmentId} {
      allow get: if isAuth();
      allow list: if isAuth();
      allow create: if isAuth(); // Techs need to create requests
      allow update, delete: if isAdmin();
    }
    
    // Referrals: Techs can create, Admins can manage.
    match /referrals/{referralId} {
      allow get: if isAuth();
      allow list: if isAuth();
      allow create: if isAuth();
      allow update, delete: if isAdmin();
    }
    
    // ProofOfWork: Techs can create, Admins can read/delete.
    match /proofOfWork/{proofId} {
      allow list, get, delete: if isAdmin();
      allow create: if isAuth();
    }

    // Settings: Only editable by Admins.
    match /settings/live {
        allow read, write: if isAdmin();
    }
    
    // Plans: Readable by authenticated users, writable by admin
    match /plans/{planId} {
        allow get: if isAuth();
        allow list: if isAuth();
        allow write: if isAdmin();
    }

    // Contacts: Writable by anyone (public form), readable only by admin.
    match /contacts/{contactId} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }
  }
}
