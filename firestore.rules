rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper Functions
    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuth() && request.auth.token.role == 'Admin';
    }
    
    function isTechnician() {
      return isAuth() && request.auth.token.role == 'Technician';
    }

    // Only the authenticated user can read/write their own profile
    match /users/{userId} {
      allow read, write: if isAuth() && request.auth.uid == userId;
      // Admins cannot list all users for security reasons, they must use the technicians collection.
      allow list: if isAdmin(); 
    }

    // Technicians can only be created/deleted via backend functions.
    // Admins can list/read all. Technicians can read their own.
    match /technicians/{techId} {
      allow read, list: if isAdmin();
      allow write: if isAdmin(); // Should be handled by secure backend function
    }

    // Technicians can query for tasks assigned to them (by UID). Admins can query all.
    match /tasks/{taskId} {
      allow read, list: if isAdmin() || (isTechnician() && request.query.where.to_list()[0][2] == request.auth.uid);
      allow create, update, delete: if isAdmin();
      allow update: if isTechnician() && get(/databases/$(database)/documents/tasks/$(taskId)).data.tech_id == request.auth.uid;
    }
    
    // Alerts are public read for any authenticated user. Only backend can create.
    match /alerts/{alertId} {
        allow read, list: if isAuth();
        allow create, update, delete: if isAdmin(); // Or backend service
    }

    // Infrastructure is public read for any authenticated user.
    match /infrastructure/{deviceId} {
      allow read, list: if isAuth();
      allow create, update, delete: if isAdmin();
    }
    
    // Connections are public read for authenticated users for map tracing.
    match /connections/{connId} {
      allow read, list: if isAuth();
      allow create, update, delete: if isAdmin();
    }

    // Materials can be read by any auth user, but only modified by Admin.
    match /materials/{materialId} {
        allow read, list: if isAuth();
        allow create, update, delete: if isAdmin();
    }
    
    // Admins can query all assignments. Techs can only query their own.
    match /assignments/{assignmentId} {
        allow read, list: if isAdmin() || (isTechnician() && request.query.where.to_list()[0][2] == request.auth.uid);
        allow create: if isAuth(); // Techs can request, Admins can assign
        allow update, delete: if isAdmin();
    }

    // Admins can list all. Techs can list their own.
    match /referrals/{referralId} {
        allow read, list: if isAdmin() || (isTechnician() && request.query.where.to_list()[0][2] == request.auth.uid);
        allow create: if isTechnician();
        allow update, delete: if isAdmin();
    }
    
    // Settings can only be read/written by Admins
    match /settings/{settingId} {
        allow read, write: if isAdmin();
    }

    // Proof of work can be created by Techs, but only read/deleted by Admins
    match /proofOfWork/{proofId} {
        allow create: if isTechnician();
        allow read, list, delete: if isAdmin();
    }

    // Contact submissions can be created by anyone, but only managed by Admins
    match /contacts/{contactId} {
        allow create: if true;
        allow read, list, update, delete: if isAdmin();
    }

  }
}
